apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermgmt-webapp
  labels:
    app: usermgmt-webapp
spec:
  replicas: {{ .Values.usermgmtWebApp.replicas }}
  selector:
    matchLabels:
      app: usermgmt-webapp
  template:
    metadata:
      labels:
        app: usermgmt-webapp
    spec:
      initContainers:
        - name: init-ex
          image: {{ .Values.usermgmtWebApp.initContainerImage }}
          command: 
            - sh
            - -c
            - echo -e "Checking for the availability of MySQL Server deployment";
              while ! nc -z {{ .Values.usermgmtWebApp.db.hostname }} {{ .Values.usermgmtWebApp.db.port }};
              do sleep 1; printf "-"; done;
              echo -e "  >> MySQL DB Server has started";
      containers:
        - name: usermgmt-webapp
          image: {{ .Values.usermgmtWebApp.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.usermgmtWebApp.containerPort }}
          env:
            - name: DB_HOSTNAME
              value: {{ .Values.usermgmtWebApp.db.hostname }}
            - name: DB_PORT
              value: "{{ .Values.usermgmtWebApp.db.port }}"
            - name: DB_NAME
              value: {{ .Values.usermgmtWebApp.db.name }}
            - name: DB_USERNAME
              value: {{ .Values.usermgmtWebApp.db.username }}
            - name: DB_PASSWORD
              value: {{ .Values.usermgmtWebApp.db.password }}